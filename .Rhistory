swirl()
library()
install.packages("swirl")
library()
library(swirl)
swirl()
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length()
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
q()
swirl()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lappy(flag_colors, sum)
lappy
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colours, mean)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lappy(flag_shapes, range)
lapply(flag_shapes, range)
shape_mat <- lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(unique(shape_mat)
)
unique_vals <- lapply(unique(shape_mat))
unique_vals <- lapply(flags, unique)
unique_vals
length(unique_vals)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
q()
set.seed(13435) ## makes sample numbers below reproduceable
X <- data.frame("var1"=sample(1:5),"var2"=sample(6:10),"var3"=sample(11:15)) ##3 variables, 5 observations
X <- X[sample(1:5),]; X$var2[c(1,3)] = NA ## rescramble the dataframe, then replace 1st and 3rd characters of var2 with NAs
X
library(plyr)
arrange(X,var1)
arrange(X,desc(var1))
X$var4 <- rnorm(5)
X
class(X)
Y <- cbind(X,rnorm(5))
Y
?table
?table
?table
help
help(plot)
updateR()
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
updateR()
r.Version()
R.versrion()
R.verstion
R.version
?table
ls()
rm(list = ls())
ls()
ls()
rm(list = ls())
injrem
setwd("C:/Users/Dangermonger/Documents/GitHub")
library(plyr)
library(dplyr)
library(ggplot2)
##check that directory exists before creating
ifelse(!dir.exists(file.path("C:/Users/Dangermonger/Documents/GitHub", "./RepData_PeerAssessment2")), +
dir.create(file.path("C:/Users/Dangermonger/Documents/GitHub", +
"./RepData_PeerAssessment2")), FALSE)
setwd("C:/Users/Dangermonger/Documents/GitHub/Repdata_PeerAssessment2")
##check that files exists in directory before downloading. Use mode="wb" for pdf
if (!file.exists("StormData.csv.bz2")) {
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
download.file(fileUrl, destfile = "./StormData.csv.bz2") ##download file
}
if (!file.exists("repdata-peer2_doc-pd01016005curr.pdf")) {
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fpeer2_doc%2Fpd01016005curr.pdf"
download.file(fileUrl, destfile = "./repdata-peer2_doc-pd01016005curr.pdf", mode="wb")
}
if (!file.exists("FAQ.pdf")) {
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fpeer2_doc%2FNCDC%20Storm%20Events-FAQ%20Page.pdf"
download.file(fileUrl, destfile = "./FAQ.pdf", mode="wb")
}
stormdata <- read.csv("StormData.csv.bz2") ##read file (don't need to unzip)
##Based on http://www.ncdc.noaa.gov/stormevents/details.jsp?type=eventtype, all data prior to 1996 is insufficient for the purposes of this analysis. This is because prior to 1996, only 3 event types were cataloged. So, the first step is to remove all events prior to 1996.
convertbl <- tbl_df(stormdata) %>% ## convert table to tbl
mutate(BGN_DATE = as.Date(BGN_DATE, format = "%m/%d/%Y")) %>%
filter(BGN_DATE >= "1996-01-01") %>%
mutate(EVTYPE = toupper(as.character(EVTYPE))) %>% ##change to capitals
select(EVTYPE, FATALITIES, INJURIES, PROPDMGEXP, PROPDMG, +
CROPDMGEXP, CROPDMG)
idx <- agrep(pattern = "FLOOD", convertbl$EVTYPE, max.distance = 1)
convertbl$EVTYPE[idx] <- "FLOOD"
idx <- agrep(pattern = "HAIL", convertbl$EVTYPE, max.distance = 1)
convertbl$EVTYPE[idx] <- "HAIL"
idx <- grep(pattern = "(STORM SURGE|STORM SURGE/TIDE)", convertbl$EVTYPE)
convertbl$EVTYPE[idx] <- "STORM SURGE"
idx <- grep(pattern = "(HURRICANE|TYPHOON)", convertbl$EVTYPE)
convertbl$EVTYPE[idx] <- "HURRICANE"
idx <- grep(pattern = "(HEAT|EXCESSIVE HEAT)", convertbl$EVTYPE)
convertbl$EVTYPE[idx] <- "HEAT"
harmtbl <- convertbl %>%
select(EVTYPE, INJURIES, FATALITIES) %>%
filter(FATALITIES & INJURIES > 0) ##remove rows where damage = 0
fatrem <-  harmtbl %>%
ddply("EVTYPE", numcolwise(sum)) %>%
select(EVTYPE, FATALITIES) %>%
arrange(desc(FATALITIES)) %>% ##order by fatalities
top_n(5)
injrem <-  harmtbl %>%
ddply("EVTYPE", numcolwise(sum)) %>%
select(EVTYPE, INJURIES) %>%
arrange(desc(INJURIES)) %>% ##order by injuries
top_n(5)
ggplot(data=injrem,
aes(x = reorder(EVTYPE, -INJURIES), y = INJURIES)) +
labs(title="Weather Event Injuries 1996 - 2011") +
labs(x="Weather Event Type", y="Injuries") +
geom_bar(binwidth=1, fill="white", colour="darkblue", stat = "identity")
ggplot(data=fatrem,
aes(x = reorder(EVTYPE, -FATALITIES), y = FATALITIES)) +
labs(title="Weather Event Fatalities 1996 - 2011") +
labs(x="Weather Event Type", y="Fatalities") +
geom_bar(binwidth=1, fill="white", colour="darkred", stat = "identity")
injrem <-  harmtbl %>%
ddply("EVTYPE", numcolwise(sum)) %>%
select(EVTYPE, INJURIES) %>%
arrange(desc(INJURIES)) %>% ##order by injuries
top_n(5)
injrem
injrem <-  harmtbl %>%
ddply("EVTYPE", numcolwise(sum)) %>%
select(EVTYPE, INJURIES) %>%
arrange(desc(INJURIES)) %>% ##order by injuries
top_n(6)
injrem
injrem <-  harmtbl %>%
ddply("EVTYPE", numcolwise(sum)) %>%
select(EVTYPE, INJURIES) %>%
arrange(desc(INJURIES)) %>% ##order by injuries
top_n(15)
injrem
mutate(PropDamageTotal = PROPDMG * as.numeric(PROPDMGEXP)) %>%
unique(convertbl$PROPDMGEXP) ##find unique cost values for property damage
##B h H K m M
unique(convertbl$CROPDMGEXP) ##find unique cost values for crop damage
##B k K m M
convertbl$PROPDMGEXP <- gsub("B", 10^9, convertbl$PROPDMGEXP)
convertbl$PROPDMGEXP <- gsub("M", 10^6, convertbl$PROPDMGEXP)
convertbl$PROPDMGEXP <- gsub("m", 10^6, convertbl$PROPDMGEXP)
convertbl$PROPDMGEXP <- gsub("K", 10^3, convertbl$PROPDMGEXP)
convertbl$PROPDMGEXP <- gsub("H", 10^2, convertbl$PROPDMGEXP)
convertbl$PROPDMGEXP <- gsub("h", 10^2, convertbl$PROPDMGEXP)
convertbl$CROPDMGEXP <- gsub("B", 10^9, convertbl$CROPDMGEXP)
convertbl$CROPDMGEXP <- gsub("m", 10^6, convertbl$CROPDMGEXP)
convertbl$CROPDMGEXP <- gsub("M", 10^6, convertbl$CROPDMGEXP)
convertbl$CROPDMGEXP <- gsub("k", 10^3, convertbl$CROPDMGEXP)
convertbl$CROPDMGEXP <- gsub("K", 10^3, convertbl$CROPDMGEXP)
multbl <- convertbl %>%
mutate(PropDamageTotal = PROPDMG * as.numeric(PROPDMGEXP)) %>%
mutate(CropDamageTotal = CROPDMG * as.numeric(CROPDMGEXP)) %>%
mutate(DamageTotal = rowSums(.[8:9], na.rm = TRUE)) %>%
select(EVTYPE, DamageTotal) %>%
filter(DamageTotal > 0) ##remove rows where damage = 0
duprem <-  multbl %>%
ddply("EVTYPE", numcolwise(sum)) %>% ##remove duplicates
mutate(DamageTotal = DamageTotal/10^6) %>%
arrange(desc(DamageTotal)) %>% ##order by damage amount
top_n(5)
ggplot(data=duprem,
aes(x = reorder(EVTYPE, -DamageTotal), y = DamageTotal)) +
labs(title="Economic Costs of Weather Events 1996 - 2011") +
labs(x="Weather Event Type", y="Cost ($ millions)") +
geom_bar(binwidth=1, fill="white", colour="darkgreen", stat = "identity")
